import { ACCOUNT_ACTIONS, PATREOS_ACTIONS, RECURRINGPAY_ACTIONS } from '../constants/action_types';
import fs from 'fs';
import util from 'util';

function generate(importedActionString, importedAction) {
  var fileBuffer = '';

  fileBuffer += "// THIS IS GENERATED BY generate_actions.mjs.  DO NOT MAKE CHANGES.\n\n";
  fileBuffer += util.format("import { %s } from '../constants/action_types'\n\n", importedActionString);

  Object.keys(importedAction).forEach(function(key) {

    var keySnake = importedAction[key];
    var keyCamelCaseFunction = keySnake.toLowerCase();
    keyCamelCaseFunction = keyCamelCaseFunction.replace(/_\w/g, (m) => m[1].toUpperCase())
    var keyCamelCaseVar = keySnake.replace('UPDATE_', '').toLowerCase();
    keyCamelCaseVar = keyCamelCaseVar.replace(/_\w/g, (m) => m[1].toUpperCase())

    fileBuffer += util.format("export function %s(%s) {\n", keyCamelCaseFunction, keyCamelCaseVar);
    fileBuffer += "  return (dispatch) => {\n";
    fileBuffer += util.format(
      "   dispatch({ type: %s.%s, data: %s });\n",
      importedActionString,
      keySnake,
      keyCamelCaseVar
    );
    fileBuffer += "  };\n";
    fileBuffer += "}\n\n";

  });

  var currentPath = process.cwd();
  var fileName = importedActionString.replace('_ACTIONS', '').toLowerCase();
  fs.writeFile(util.format('%s/actions/%s_actions.js', currentPath, fileName), fileBuffer, function(err) {
      if(err) {
          return console.log(err);
      }

      console.log("File saved to %s/actions/%s_actions.js", currentPath, fileName);
  });
}

generate('ACCOUNT_ACTIONS', ACCOUNT_ACTIONS);
generate('PATREOS_ACTIONS', PATREOS_ACTIONS);
generate('RECURRINGPAY_ACTIONS', RECURRINGPAY_ACTIONS);
